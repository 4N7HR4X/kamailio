curl

Olle E. Johansson

   Edvina AB

Juha Heinanen

   TutPro Inc.

Carsten Bock

   ng-voice GmbH

   Copyright © 2008-2009 Juha Heinanen

   Copyright © 2013 Carsten Bock, ng-voice GmbH

   Copyright © 2015 Olle E. Johansson, Edvina AB
     __________________________________________________________________

   Table of Contents

   1. Admin Guide

        1. Overview
        2. Dependencies

              2.1. Kamailio Modules
              2.2. External Libraries or Applications

        3. Parameters

              3.1. default_connection_timeout (int)
              3.2. curlcon (string)

        4. Functions

              4.1. http_query(url, [post-data], result)

        5. Pseudovariables

              5.1. $curlerror(error)

        6. Counters

              6.1. curl.connections
              6.2. curl.connok
              6.3. curl.connfail

   List of Examples

   1.1. Set default_connection_timeout parameter
   1.2. Set curlcon parameter
   1.3. http_query() usage

Chapter 1. Admin Guide

   Table of Contents

   1. Overview
   2. Dependencies

        2.1. Kamailio Modules
        2.2. External Libraries or Applications

   3. Parameters

        3.1. default_connection_timeout (int)
        3.2. curlcon (string)

   4. Functions

        4.1. http_query(url, [post-data], result)

   5. Pseudovariables

        5.1. $curlerror(error)

   6. Counters

        6.1. curl.connections
        6.2. curl.connok
        6.3. curl.connfail

1. Overview

   This module implements protocol functions that use the libcurl library
   to fetch data from external HTTP servers or post data to HTTP servers.
   The module is using a concept of "connections" to define properties of
   sessions in a simple way.

   Function http_query allows Kamailio to issue an HTTP GET request and
   get access to parts of the reply. This function has been ported from
   the utils module and now use the same libcurl functions.

2. Dependencies

   2.1. Kamailio Modules
   2.2. External Libraries or Applications

2.1. Kamailio Modules

   The following modules must be loaded before this module:
     * None.

2.2. External Libraries or Applications

   The following libraries or applications must be installed before
   running Kamailio with this module loaded:
     * libcurl.

3. Parameters

   3.1. default_connection_timeout (int)
   3.2. curlcon (string)

3.1. default_connection_timeout (int)

   Defines in seconds how long Kamailio waits for response from servers.

   Default value is zero, i.e., the timeout function is disabled.

   Example 1.1. Set default_connection_timeout parameter
...
modparam("curl", "default_connection_timeout", 2)
...

3.2. curlcon (string)

   Defines a connection and credentials for the connection for use in a
   connection-oriented function call in this module.

   Syntax:
   <connection-name>=><schema>://[<username>:<password>@]<hostname/address
   >

   The address in the URL is the base for the URL in the curlcon_query()
   call. The address given in the function call will be appended to the
   base URL in the connection definition.

   By default, no connections are defined.

   Example 1.2. Set curlcon parameter
...
modparam("curl", "curlcon", "apione=>http://atlanta.example.com")
modparam("curl", "curlcon", "apitwo=>http://atlanta.example.com/api/12")
modparam("curl", "curlcon", "apithree=>http://annabella:mysecret@atlanta.example
.com/api/12")
...

4. Functions

   4.1. http_query(url, [post-data], result)

4.1. http_query(url, [post-data], result)

   Sends HTTP GET or POST request according to URL given in "url"
   parameter, which is a string that may contain pseudo variables.

   If you want to make a POST-Request, you have to define the "post"-data,
   that should be submitted in that request as the second parameter.

   If HTTP server returns a class 2xx, 3xx or 4xx reply, the first line of
   the reply's body (if any) is stored in "result" parameter, which must
   be a writable pseudo variable.

   Function returns reply code of HTTP reply or -1 if something went
   wrong.

   This function can be used from REQUEST_ROUTE, ONREPLY_ROUTE,
   FAILURE_ROUTE, and BRANCH_ROUTE.

   Example 1.3. http_query() usage
...
# GET-Request
http_query("http://tutpro.com/index.php?r_uri=$(ru{s.escape.param})&f_uri=$(fu{s
.escape.param})",
           "$var(result)")
switch ($retcode) {
       ...
}
...
...
# POST-Request
http_query("http://tutpro.com/index.php", "r_uri=$(ru{s.escape.param})&f_uri=$(f
u{s.escape.param})",
           "$var(result)")
switch ($retcode) {
       ...
}
...

5. Pseudovariables

   5.1. $curlerror(error)

5.1. $curlerror(error)

   cURL returns error codes from the protocol used. If an error happens, a
   cURL specific error code below 100 is returned. The $curlerror pv
   returns a text string representing the error. For more information on
   cURL error codes, please visit
   http://curl.haxx.se/libcurl/c/libcurl-errors.html

6. Counters

   6.1. curl.connections
   6.2. curl.connok
   6.3. curl.connfail

6.1. curl.connections

   The number of connection definitions that are in-memory.

6.2. curl.connok

   The number of successful connections since Kamailio start

6.3. curl.connfail

   The number of failed connections since Kamailio start
