#
# $Id$
#
# json module unit testing script

debug = 1
log_stderror=yes
fork=no
listen = 127.0.0.1:5060
listen=udp:127.0.0.1:5060

check_via=no    # (cmd. line: -v)
dns=no          # (cmd. line: -r)
rev_dns=no      # (cmd. line: -R)
sip_warning=no

# ------------------ module loading ----------------------------------

loadpath "modules:modules_k"

loadmodule "pv"
loadmodule "xlog"
loadmodule "json"
loadmodule "htable"

# ------------------- unit tests ------------------------------------

# using htable because it works with event_route
event_route[htable:mod-init] 
{
    $var(myjson) = "{\
                     \"a\":\"a string\", \
                     \"i\": 1, \
                     \"b\":\"another string\", \
                     \"inner\": { \
                         \"a\":\"inner string\", \
                         \"deep\": {\
                             \"herp\": \"blah\",\
                             \"num\": 42,\
                             \"list\":[1,2,3,4],\
                             \"ll\":[[1,2],[3,4],[5,6],{\"foo\":\"bar\"}],\
                             \"deeper\": \"foo\"\
                         }\
                     }\
                   }";

    $var(badjson) = "some string thing";
    $var(array_json_objs) = "{\"list\":[{\"foo\":\"bar\"},{\"baz\":\"derp\"},{\"herp\":\"blarg\"}]}";
    $var(null_json) = "{\"null\":null}";
    $var(array_json) = "{\"loopme\":[0,1,2,3,4,5]}";
    $var(empty_array) = "{\"list\":[]}";

    $var(failed)=0;

    # testA
    json_path_get("{\"foo\":\"bar\"}","foo","$var(testA)");
    if($var(testA)!="bar") {
        xlog("L_ALERT","FAILED testA: \"foo\" == \"$var(testA)\"\n");
        $var(failed) = 1;
    }

    # testB
    json_path_get("{\"foo\":30}","foo","$var(testB)");
    if($var(testB)!=30) {
        xlog("L_ALERT","FAILED testB: \"foo\" == \"$var(testB)\"\n");
        $var(failed) = 1;
    }

    # testC
    json_path_get($var(myjson),"a","$var(testC)");
    if($var(testC)!="a string") {
        xlog("L_ALERT","FAILED testC: \"a\" == \"$var(testC)\"\n");
        $var(failed) = 1;
    }

    # testD
    json_path_get($var(myjson),"i","$var(testD)");
    if($var(testD) != 1) {
        xlog("L_ALERT","FAILED testD: \"i\" == \"$var(testD)\"\n");
        $var(failed) = 1;
    }

    # testE
    json_path_get($var(myjson),"inner.deep.num","$var(testE)");
    if($var(testE) != 42) {
        xlog("L_ALERT","FAILED testE: \"inner.deep.num\" == \"$var(testE)\"\n");
        $var(failed) = 1;
    }

    # testF
    json_path_get($var(myjson),"inner.deep.list[3]","$var(testF)");
    if($var(testF) != 4) {
        xlog("L_ALERT","FAILED testF: \"inner.deep.list[1]\" == \"$var(testF)\"\n");
        $var(failed) = 1;
    }

    # testG
    json_path_get($var(myjson),"inner.deep.ll[0][1]","$var(testG)");
    if($var(testG) != 2) {
        xlog("L_ALERT","FAILED testG: \"inner.deep.list[1]\" == \"$var(testG)\"\n");
        $var(failed) = 1;
    }

    # testH
    json_path_get($var(myjson),"inner.deep.ll[3].foo","$var(testH)");
    if($var(testH) != "bar") {
        xlog("L_ALERT","FAILED testH: \"inner.deep.list[1]\" == \"$var(testH)\"\n");
        $var(failed) = 1;
    }

    # testI
    json_path_get($var(array_json_objs),"list[1]","$var(testI)");
    if($var(testI) != "{\"baz\":\"derp\"}") {
        xlog("L_ALERT","FAILED testI: \"list[1]\" == \"$var(testI)\"\n");
        $var(failed) = 1;
    }

    # testJ
    json_path_get($var(null_json),"null","$var(testJ)");
    if($var(testJ) != $null) {
        xlog("L_ALERT","FAILED testJ: \"null\" == \"$var(testJ)\"\n");
        $var(failed) = 1;
    }

    # testJ
    json_path_get($var(null_json),"null","$var(testJ)");
    if($var(testJ) != $null) {
        xlog("L_ALERT","FAILED testJ: \"null\" == \"$var(testJ)\"\n");
        $var(failed) = 1;
    }

    # testK
    json_array_size($var(array_json), "loopme", "$var(testK)");
    if($var(testK) != 6) {
        xlog("L_ALERT","FAILED testK: size of loopme is \"$var(testK)\"\n");
        $var(failed) = 1;
    }

    # testL
    json_array_size($var(empty_array), "list", "$var(testL)");
    if($var(testL) != 0) {
        xlog("L_ALERT","FAILED testL: size is \"$var(testL)\"\n");
        $var(failed) = 1;
    }

    # testM
    # looping test
    $var(count) = 0;
    json_array_size($var(array_json), "loopme", "$var(testM_size)");
    while($var(count) < $var(testM_size)) {
        json_path_get($var(array_json), "loopme[$var(count)]", "$var(testM)");
        if($var(testM) != $var(count)) {
            xlog("L_ALERT","FAILED testM: \"loopme[$var(count)]\" == \"$var(testM)\"\n");
            $var(failed) = 1;
        }
        $var(count) = $var(count) + 1;
    }

    if(($var(testM) != ($var(count)) - 1) || ($var(count) < 6)) {
        xlog("L_ALERT","FAILED testM: didn't loop\n");
        xlog("L_ALERT","FAILED testM: testM == $var(testM)\n");
        xlog("L_ALERT","FAILED testM: count == $var(count)\n");
        $var(failed) = 1;
    }

    # testN
    $var(foo_json) = "{\"foo\":\"bar\"}";
    json_path_get($var(foo_json),"","$var(testN)");
    if($var(testN)!=$var(foo_json)) {
        xlog("L_ALERT","FAILED testN: \"foo\" == \"$var(testN)\"\n");
        $var(failed) = 1;
    }

    # testO
    json_get_field("{\"foo\":\"bar\"}", "foo", "$var(testO)");
    if($var(testO)!="bar") {
        xlog("L_ALERT","FAILED testO: \"foo\" == \"$var(testO)\"\n");
        $var(failed) = 1;
    }

    if($var(failed) == 1) {
        xlog("L_ALERT", "JSON TESTS FAILED\n");
    }

    if($var(failed) == 0) {
        xlog("L_ALERT", "JSON TESTS PASSED\n");
    }

    xlog("L_ALERT", "ctrl+c to exit\n");
}

